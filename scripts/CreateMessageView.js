// Generated by CoffeeScript 1.6.3
(function() {
  var CreateMessageView, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  CreateMessageView = (function(_super) {
    __extends(CreateMessageView, _super);

    function CreateMessageView() {
      this.createMessage = __bind(this.createMessage, this);
      _ref = CreateMessageView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    CreateMessageView.prototype.el = document.getElementById('#create');

    CreateMessageView.prototype.events = {
      'click .submit-btn': 'createMessage'
    };

    CreateMessageView.prototype.createMessage = function(e) {
      var body, box, newMessage, tags, title, to;
      title = this.$el.find('.title').val();
      body = this.el.find('.body').val();
      tags = this.el.find('.tags').val();
      to = this.$el.find('.to').val();
      box = this.$el.find('.to').val() === 'me' ? 'reminder' : 'outbox';
      newMessage = new Message({
        title: title,
        body: body,
        tags: tags,
        box: box
      });
      if (box === 'outbox') {
        OutboxView.addMessage(newMessage);
      } else {
        ReminderView.addMessage(newMessage);
      }
    };

    return CreateMessageView;

  })(Backbone.View);

}).call(this);
